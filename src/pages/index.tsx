import { SignInButton, SignOutButton, useUser } from "@clerk/nextjs";
import { type NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { useState } from "react";
import { LoadingPage } from "~/components/loading";


import { api } from "~/utils/api";
import type {RouterOutputs} from "~/utils/api"

type PostWithUser = RouterOutputs["posts"]["getAll"][number];

const PostView = (props: PostWithUser) => {
  const { post, author } = props;

  return (
    <div className="flex items-center justify-between gap-3 border-slate-300 border-2" key={post.id}>
      <Image src={author.profileImageUrl}
        alt="Profile image"
        className="rounded-full"
        height={36}
        width={36}/>
      <span>{post.content}</span>
    </div>
  );
};

const Feed = () => {
  const { data, isLoading: postsLoading } = api.posts.getAll.useQuery();

  if (postsLoading) return <LoadingPage />;

  if (!data) return <div>Something went wrong</div>;

  return (
    <div className="flex flex-col">
      {data.map((fullPost) => (
          <PostView {...fullPost} key={fullPost.post.id} />
        ))}
    </div>
  );
}

const CreatePostWizard = () => {
  const { user } = useUser();
  
  const [input, setInput] = useState("");
  
  const ctx = api.useContext();
  
  

  const { mutate, isLoading: isPosting } = api.posts.create.useMutation({
    onSuccess: () => {
      setInput("");
      void ctx.posts.getAll.invalidate();
    }
  });

  if (!user) return null;

  return (
    <div className="flex w-full gap-3">
      <Image
        src={user.profileImageUrl}
        alt="Profile image"
        className="h-14 w-14 rounded-full"
        height={56}
        width={56}
      />
      <input
        type="text"
        placeholder="Type a post"
        className="grow bg-transparent outline-none"
        value={input}
        onChange={(e)=> setInput(e.target.value)}
        disabled={isPosting}
      />
      <button className="bg-teal-300 h-[56px] w-24 rounded-3xl" onClick={() => mutate({ content: input })}>Post</button>
    </div>
  );
};

const Home: NextPage = () => {
  const {isLoaded: userLoaded, isSignedIn} = useUser();

  api.posts.getAll.useQuery();

  if (!userLoaded) return <div>Nothing to see here</div>;

  

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-slate-500 text-white">
        <div className="flex flex-col gap-6">
          {!isSignedIn && <SignInButton />}
          <Feed />
          {isSignedIn && (
            <div className="flex flex-col w-full items-center gap-5">
              <CreatePostWizard />
              <div className="flex items-center justify-center bg-red-300 h-[56px] w-24 rounded-3xl">
                <SignOutButton />
              </div>
            </div>
          )}
        </div>
      </main>
    </>
  );
};

export default Home;
